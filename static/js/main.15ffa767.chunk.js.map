{"version":3,"sources":["components/AddTask.js","components/Element.js","components/TaskList.js","components/App.js","index.js"],"names":["AddTask","_ref","addTask","_useState","useState","_useState2","Object","slicedToArray","title","setTitle","_useState3","_useState4","description","setDescription","_useState5","_useState6","isImportant","setIsImportant","handleChange","e","target","name","value","checked","console","warn","resetInputs","react_default","a","createElement","className","onSubmit","preventDefault","type","onChange","placeholder","required","Element","id","isFinished","toggleProperty","removeTask","onClick","TaskList","tasks","taskList","map","task","components_Element","assign","key","App","setTasks","components_AddTask","Math","floor","random","prev","concat","toConsumableArray","length","components_TaskList","property","prevTasks","filter","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.15ffa767.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\n\r\nimport '../styles/AddTask.css'\r\nconst AddTask = ({ addTask }) => {\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [isImportant, setIsImportant] = useState(false);\r\n\r\n    const handleChange = (e) => {\r\n        switch (e.target.name) {\r\n            case 'title':\r\n                setTitle(e.target.value)\r\n                return;\r\n            case 'description':\r\n                setDescription(e.target.value)\r\n                return;\r\n            case 'isImportant':\r\n                setIsImportant(e.target.checked)\r\n                return;\r\n            default:\r\n                console.warn('Wrong input name!')\r\n                return;\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (title) {\r\n            addTask({ title, description, isImportant });\r\n\r\n            resetInputs();\r\n        }\r\n    }\r\n\r\n    const resetInputs = () => {\r\n        setTitle('');\r\n        setDescription('')\r\n        setIsImportant('')\r\n    }\r\n\r\n    return (\r\n        <div className='addTask'>\r\n            <form onSubmit={handleSubmit} className='taskForm'>\r\n\r\n                <label className='inputLabel'>\r\n                    Task title:\r\n                <input\r\n                        className='textInput'\r\n                        type=\"text\"\r\n                        value={title}\r\n                        onChange={handleChange}\r\n                        name=\"title\"\r\n                        placeholder='Title...'\r\n                        required\r\n                    />\r\n                </label>\r\n                <label className=\"inputLabel\" >\r\n                    Description:\r\n                <input\r\n                        className='textInput'\r\n                        type=\"text\"\r\n                        value={description}\r\n                        onChange={handleChange}\r\n                        name=\"description\"\r\n                        placeholder='Description..'\r\n                    />\r\n                </label>\r\n\r\n                <label className='inputLabel'>\r\n                    Important task?\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={isImportant}\r\n                        onChange={handleChange}\r\n                        name=\"isImportant\"\r\n                    />\r\n\r\n\r\n                </label>\r\n\r\n                <div className='formBtns'>\r\n                    <button className='addBtn'>Add task</button>\r\n                </div>\r\n            </form>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddTask;","import React from 'react';\r\n\r\nimport '../styles/Element.css'\r\nconst Element = ({ title, description, id, isFinished, isImportant, toggleProperty, removeTask }) => {\r\n\r\n\r\n    const handleToggleImportant = () => {\r\n        toggleProperty(id, 'isImportant');\r\n    }\r\n\r\n    const handleToogleFinished = () => {\r\n        toggleProperty(id, 'isFinished')\r\n    }\r\n\r\n    const handleRemove = () => {\r\n        removeTask(id);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className={isFinished ? 'element finished' : 'element'}>\r\n            <h4 className={isImportant ? 'taskHeader important' : 'taskHeader'}>{title} {isImportant ? ' (!!!)' : ''}</h4>\r\n            <p className='taskDescription'>{description}</p>\r\n\r\n            <div className='actionBtns'>\r\n                <button onClick={handleToogleFinished}>\r\n                    {isFinished ? 'Restore' : 'Set as done'}\r\n                </button>\r\n\r\n                {!isFinished &&\r\n                    <button onClick={handleToggleImportant}>\r\n                        {isImportant ? 'Normal' : 'Important'}\r\n                    </button>\r\n                }\r\n                <button onClick={handleRemove}>Remove</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Element;","import React from 'react';\r\n\r\n\r\nimport Element from './Element'\r\n\r\nimport '../styles/TaskList.css'\r\nconst TaskList = ({ tasks, toggleProperty, removeTask }) => {\r\n    const taskList = tasks.map(task =>\r\n        <Element\r\n            key={task.id}\r\n            toggleProperty={toggleProperty}\r\n            removeTask={removeTask}\r\n            {...task}\r\n        />\r\n    )\r\n    return (\r\n        <div className=\"taskList\">\r\n            <h2>List of tasks:</h2>\r\n            <div>\r\n                {taskList}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TaskList;","import React, { useState } from 'react';\r\n\r\nimport AddTask from './AddTask';\r\nimport TaskList from './TaskList';\r\n\r\nimport '../styles/App.css'\r\n\r\nconst App = () => {\r\n\r\n    const [tasks, setTasks] = useState([]);\r\n\r\n    const handleAddTask = ({ title, description, isImportant }) => {\r\n        const task = {\r\n            title,\r\n            description,\r\n            isImportant,\r\n            id: Math.floor(Math.random() * 1234)\r\n        }\r\n\r\n        setTasks(prev => [...prev, task])\r\n    }\r\n\r\n    const handleToogleProperty = (id, property) => {\r\n        setTasks(prevTasks => prevTasks.filter(task => {\r\n            if (task.id === id) {\r\n                task[property] = !task[property]\r\n            }\r\n            return task;\r\n        }))\r\n    }\r\n\r\n\r\n    const handleRemoveTask = (id) => {\r\n        setTasks(prevTasks => prevTasks.filter(task => task.id !== id))\r\n    }\r\n\r\n    return (\r\n        <div className='app'>\r\n            <AddTask addTask={handleAddTask} />\r\n            {  tasks.length > 0 &&\r\n                <TaskList\r\n                    toggleProperty={handleToogleProperty}\r\n                    removeTask={handleRemoveTask}\r\n                    tasks={tasks}\r\n                />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}